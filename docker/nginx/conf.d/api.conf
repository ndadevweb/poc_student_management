server {
    listen 80; # listen 80 default_server; # use with the main block server
    listen [::]:80;
    server_name _;
    root /app/public;
    index index.php;
    client_max_body_size 64m; # Should match or exceed PHP post_max_size and upload_max_filesize

    # Not useful for an API REST but it is for a webapp with static files
    # location ~* \.(?:css|js|png|jpg|jpeg|gif|webp|ico|svg|ttf|otf|woff2?)$ {
    #   try_files $uri =404;
    #   access_log off;
    #   expires 1h;
    # }

    # REST API
    add_header Access-Control-Expose-Headers Location,Link,ETag always;
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS always;
    add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization always;
    add_header Vary Origin always;
    # If cookie used uncomment these lines and comment : add_header Access-Control-Allow-Origin * always
    # add_header Access-Control-Allow-Origin $http_origin always;
    # add_header Access-Control-Allow-Credentials true always;
    if ($request_method = OPTIONS) {
        return 204;
    }

    location / {
        try_files $uri /index.php$is_args$args;
        # try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        include fastcgi_params;
        fastcgi_param HTTP_PROXY "";
        fastcgi_pass lahback:9000; # Docker Service Name
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        # fastcgi_param DOCUMENT_ROOT $realpath_root;
        # fastcgi_param HTTPS $https if_not_empty;
        fastcgi_buffering off;
        fastcgi_read_timeout 180s; # Increase for long API requests
        fastcgi_send_timeout 180s;
        # fastcgi_buffers 16 16k; # useful if the response contains 'upstream sent too big header'
        # fastcgi_buffer_size 32k;  # useful if the response contains 'upstream sent too big header' (double 16k)
    }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error_api.log warn;
}
